@model Artist

@{
    bool isNew = Model.id == 0;
    string imagenFile = $"../../public/artist_{Model.id}.jpg";
    string flagFile = $"../../public/flag_{Model.country}.png";
}


<section is="artistsSection">
    <div class="row content container">

        <div class="artistForm">
            @using (Html.BeginForm("Update", "Artists", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div>
                    <div class="title">
                        @{
                            if (isNew)
                            {
                                <span>Creando Artista</span>
                            }
                            else
                            {
                                <span>Editando Artista</span>
                            }
                        }
                    </div>
                    <input type="submit" value="Guardar" class="boton_amarillo" />
                    @Html.ActionLink("Cancelar", "Index", null, null, new { @class = "boton_amarillo" })
                </div>
                <hr />
                <div class="columna">
                    <img id="photo" class="photo" src="@imagenFile" />
                </div>
                <div class="columna">
                    <div class="form">
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.firstName,"Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.lastName,"Apellido", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.lifeSpan,"Años de vida", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.lifeSpan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.lifeSpan, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.country,"País", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.description, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <label>Imagen</label>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.TextBox("newImage", "", new { type = "file" }) <br />
                            </div>
                        </div>


                    </div>
                </div>
            }

        </div>
    </div>
</section>



@section Scripts {
    
    <script>


        $(function () {
            $('#newImage').change(function () {
                var input = this;
                var url = $(this).val();
                var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
                if (input.files && input.files[0] && (ext == "gif" || ext == "png" || ext == "jpeg" || ext == "jpg")) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#photo').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
                else {
                    $('#photo').attr('src', '/public/artist_0.png');
                }
            });

        });


    </script>


}



